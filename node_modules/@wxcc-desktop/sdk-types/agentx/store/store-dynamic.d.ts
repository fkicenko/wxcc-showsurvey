import { Store } from "./index";
import { Navigation } from "@agentx/agentx-mfe-wc-based";
import { DynamicLayout, DynamicWidget } from "@uuip/unified-ui-platform";
export declare class ModuleDynamic {
    isDragDrop: boolean;
    header: DynamicLayout.Page | null;
    panel: DynamicWidget.Options | null;
    persistent: DynamicWidget.Options[] | null;
    navigation: Store.Dynamic.NavRoute[] | null;
    headless: DynamicLayout.Page | null;
    isConnector: boolean;
    updateScreenSize(v: boolean): void;
    updateIsDragDrop(v: boolean): void;
    updateHeader(v: DynamicLayout.Page): void;
    updatePanel(v: DynamicWidget.Options): void;
    updatePersistent(v: DynamicWidget.Options[]): void;
    updateNavigation(v: Store.Dynamic.NavRoute[]): void;
    updateHeadless(v: DynamicLayout.Page): void;
    get persistentWidgets(): import("@uuip/unified-ui-platform/dist/types/widgets/src/types").Options;
    get showPersistentWidgets(): boolean | null;
    testStr: string;
    testObj: {
        sub: {
            sub: {
                val: string;
            };
        };
    };
    testArr: string[];
    testBool: boolean;
    testNotObservable: string;
    updTest(): void;
}
declare module "@/store" {
    namespace Store.Dynamic {
        type ConfigJson = {
            appTitle?: string;
            logo?: string;
            dragDropEnabled?: boolean;
            notificationTimer?: number;
            maximumNotificationCount?: number;
            browserNotificationTimer?: number;
            wxmConfigured?: boolean;
            area: {
                header?: DynamicLayout.Page;
                headless?: DynamicLayout.Page;
                panel?: DynamicWidget.Options;
                persistent?: DynamicWidget.Options[];
                navigation?: NavRoute[];
            };
        };
        type NavRoute = {
            nav: Navigation.Item;
            page: DynamicLayout.Page;
        };
    }
}
export declare const dynamic: ModuleDynamic;
