export declare const cmsContent: {
    chatResponseMapping: {
        id: string;
        auxiliaryDataType: string;
        type: string;
        attributes: {
            vteamDbId__l: number;
            language__s: string;
            _lmts__l: number;
            vteamId__s: string;
            cstts: number;
            messageId__s: string;
            _type__s: string;
            allQueues__i: number;
            tid: string;
        };
    };
    chatResponse: {
        id: string;
        auxiliaryDataType: string;
        type: string;
        attributes: {
            language__s: string;
            _lmts__l: number;
            name__s: string;
            cstts: number;
            status__i: number;
            _type__s: string;
            content__s: string;
            tid: string;
        };
    };
    customerInfo: {
        auxiliaryMetadata: {
            id: null;
            query: {
                anchorId: string;
                columns: null;
                filterGroups: null;
                auxiliaryDataType: string;
                objectType: string;
            };
            columns: null;
            lastAccessTimestamp: number;
            numberOfRecords: number;
        };
        auxiliaryDataList: {
            id: string;
            auxiliaryDataType: string;
            type: string;
            attributes: {
                offerCode__s: string;
                serviceType__s: string;
                mobile__s: string;
                cccEnabled__i: number;
                externalId__s: string;
                work__s: string;
                maximumAddressBooks__i: number;
                tid: string;
                maximumTextSkills__i: number;
                tenantXmlUrl__s: string;
                multipleTimeZoneEnabled__i: number;
                maxChannels__l: number;
                permitAlert__i: number;
                samCdxDataCompression__i: number;
                serviceProvisioningId__s: string;
                maximumUsers__i: number;
                city__s: string;
                legRecordingEnabled__i: number;
                license__s: string;
                postalCode__s: string;
                allowAgentThresholds__i: number;
                configureWebCallbackEnabled__i: number;
                maximumCallbackAttempts__i: number;
                maximumActiveAgents__i: number;
                webexManagementEnabled__i: number;
                domain__s: string;
                email__s: string;
                pruningStrategy__s: string;
                cstts: number;
                maximumActiveCalls__l: number;
                inboundMaximumActiveCalls__l: number;
                multiMediaEnabled__i: number;
                orderId__s: string;
                firstName__s: string;
                allowAgentToAccessRecordings__i: number;
                maximumThresholdRules__i: number;
                checkAgentAvailability__i: number;
                recordAllCalls__i: number;
                publishAgentEvents__i: number;
                configureSpeechEnabledIVREnabled__i: number;
                webCallBackEnabled__i: number;
                socialChannel__i: number;
                lastName__s: string;
                wfoEnabled__i: number;
                jukeboxEnabled__i: number;
                mapViewEnabled__i: number;
                _lmts__l: number;
                publishDynamicQueuedValues__i: number;
                publishAgentCommandEvents__i: number;
                recordingPauseDuration__i: number;
                siteLevelTfnEnabled__i: number;
                ivrParkUrl__s: string;
                pauseResumeEnabled__i: number;
                outdialMaximumActiveCalls__l: number;
                maximumVirtualTeams__i: number;
                sid: string;
                retryCallbackInterval__i: number;
                thresholdAlertsEnabled__i: number;
                shortCallThreshold__l: number;
                pruningValue__i: number;
                cfbEnabled__i: number;
                maximumSkills__i: number;
                street__s: string;
                publishAgentDetailedValues__i: number;
                resourcesCreated__i: number;
                publishCallEvents__i: number;
                orderSubscriptionId__s: string;
                samIdxDataCompression__i: number;
                country__s: string;
                voiceCallBackEnabled__i: number;
                tenantId__s: string;
                seatMapEnabled__i: number;
                _type__s: string;
                webexManagementUrl__s: string;
                sbrEnabled__i: number;
                dbId__l: number;
                lastAgentRouting__i: number;
                state__s: string;
                voicePrefix__s: string;
                lostCallThreshold__l: number;
                numberOfCadVariables__i: number;
                analyticsEnabled__i: number;
                thirdPartyEnabled__i: number;
                campaignManagerEnabled__i: number;
                shortHandleThreshold__l: number;
                publishQueuedValues__i: number;
                samDataCompressionType__s: string;
            };
        }[];
    };
    teams: {
        auxiliaryMetadata: {
            id: null;
            query: {
                anchorId: string;
                columns: null;
                filterGroups: null;
                auxiliaryDataType: string;
                objectType: string;
            };
            columns: null;
            lastAccessTimestamp: number;
            numberOfRecords: number;
        };
        auxiliaryDataList: ({
            id: string;
            auxiliaryDataType: string;
            type: string;
            attributes: {
                priority__i: number;
                _lmts__l: number;
                desktopLayoutId__s: string;
                multimediaProfileId__s: string;
                siteId__s: string;
                capacity__l: number;
                name__s: string;
                cstts: number;
                teamDn__s: string;
                teamStatus__s: string;
                status__i: number;
                _type__s: string;
                tid: string;
                dbId__l: number;
                sid: string;
                teamType__i: number;
                skillProfileId__s: string;
                _seedData__i?: undefined;
            };
        } | {
            id: string;
            auxiliaryDataType: string;
            type: string;
            attributes: {
                priority__i: number;
                _lmts__l: number;
                siteId__s: string;
                name__s: string;
                capacity__l: number;
                cstts: number;
                teamStatus__s: string;
                teamDn__s: string;
                status__i: number;
                _type__s: string;
                tid: string;
                dbId__l: number;
                sid: string;
                _seedData__i: number;
                teamType__i: number;
                desktopLayoutId__s?: undefined;
                multimediaProfileId__s?: undefined;
                skillProfileId__s?: undefined;
            };
        })[];
    };
    agentTeams: {
        details: {
            user: {
                id: string;
                auxiliaryDataType: string;
                type: string;
                attributes: {
                    lastName__s: string;
                    _lmts__l: number;
                    historicalReportsEnabled__i: number;
                    ciUserId__s: string;
                    multimediaProfileId__s: null;
                    mobile__s: string;
                    externalId__s: string;
                    work__s: string;
                    roleId__s: null;
                    status__i: number;
                    tid: string;
                    sid: string;
                    secretQuestion__s: null;
                    xspVersion__s: string;
                    subscriptionId__s: string;
                    city__s: string;
                    login__s: string;
                    profileId__s: string;
                    invalidAttempts__i: number;
                    street__s: string;
                    postalCode__s: string;
                    agentProfileId__s: string;
                    teamInfo__s: {
                        421: string;
                        259: string;
                    };
                    locked__i: null;
                    timezone__s: null;
                    passwordPolicyId__s: null;
                    country__s: string;
                    bcUserId__s: string;
                    siteId__s: string;
                    email__s: string;
                    cstts: number;
                    _type__s: string;
                    passwordLastModifiedTime__l: null;
                    dbId__l: string;
                    passwordHistoryData__s: string;
                    state__s: string;
                    firstName__s: string;
                    password__s: null;
                    extMultimediaProfileId__s: null;
                    defaultDn__s: string;
                    secretAnswer__s: null;
                    changePassword__i: null;
                    callCenterEnabled__i: number;
                    teamIds__sa: string[];
                    skillProfileId__s: string;
                };
                login: string;
                emailAddress: string;
                password: string;
            };
        };
    };
    desktopLayout: {
        id: string;
        auxiliaryDataType: string;
        type: string;
        attributes: {
            validated__i: number;
            _lmts__l: number;
            assigned__i: number;
            editedBy__s: string;
            name__s: string;
            cstts: number;
            status__i: number;
            tid: string;
            validatedTime__l: number;
            sid: string;
            global__i: number;
            description__s: string;
            jsonFileContent__s: string;
            teamIds__sa: string[];
            jsonFileName__s: string;
        };
    };
};
//# sourceMappingURL=cms-service.mock.d.ts.map