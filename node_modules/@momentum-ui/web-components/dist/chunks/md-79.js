(window["momentum-web-components-[id]"]=window["momentum-web-components-[id]"]||[]).push([[79],{119:function(t,e,i){"use strict";i.r(e),i.d(e,"TaskItem",(function(){return a}));i(49),i(15);var a,o=i(5),s=i(4),n=i(0),m=i(2),r=i(3),c=n.css`:host{width:100%}.md-taskitem{align-items:center;display:flex;flex-direction:row;flex-wrap:nowrap;justify-content:stretch;border-radius:.5rem;color:var(--md-secondary-text-color);cursor:pointer;margin-bottom:4px;min-height:5rem;padding:.75rem;position:relative;width:auto;z-index:0}.md-taskitem.selected{background-color:var(--taskitem-pressed-bg-color,#fff);box-shadow:0 .125rem .25rem rgba(0,0,0,.16)}.md-taskitem.selected .md-taskitem__content_chat,.md-taskitem.selected .md-taskitem__content_popover_title,.md-taskitem.selected .md-taskitem__content_queue{color:var(--taskitem-selected-text-color,#121212)}.md-taskitem.selected .md-taskitem__content_title.mainTitle{color:var(--taskitem-selected-text-color,#121212)}.md-taskitem:hover{background-color:var(--taskitem-hover-bg-color,#fff)}.md-taskitem:hover .md-taskitem__content_chat,.md-taskitem:hover .md-taskitem__content_popover_title,.md-taskitem:hover .md-taskitem__content_queue{color:var(--taskitem-selected-text-color,#121212)}.md-taskitem:hover .md-taskitem__content_title.mainTitle{color:var(--taskitem-selected-text-color,#121212)}.md-taskitem:active{background-color:var(--taskitem-pressed-bg-color,#fff)}.md-taskitem:active .md-taskitem__content_chat,.md-taskitem:active .md-taskitem__content_popover_title,.md-taskitem:active .md-taskitem__content_queue{color:var(--taskitem-selected-text-color,#121212)}.md-taskitem:active .md-taskitem__content_title.mainTitle{color:var(--taskitem-selected-text-color,#121212)}.md-taskitem:focus{background:var(--taskitem-focus-bg-color,#fff);box-shadow:none;outline:0}.md-taskitem:focus::after{box-shadow:0 0 0 .125rem var(--taskitem-focus-border-color,#007aa3)}.md-taskitem::after{bottom:0;content:"";display:block;left:0;position:absolute;right:0;top:0;z-index:-1;border-radius:.5rem;margin:-.125rem}.md-taskitem__mediatype{margin-right:.5rem;position:relative;width:2.625rem}.md-taskitem__mediatype .md-taskitem__status{align-items:center;display:inline-flex;justify-content:space-around;position:absolute;background:var(--taskitem-status-bg-color,#dedede);border-radius:50%;bottom:-4px;color:var(--taskitem-status-text-color,#121212);height:1.25rem;right:-4px;width:1.25rem}.md-taskitem__mediatype .md-taskitem__status md-icon{height:.75rem}.md-taskitem__mediatype .md-taskitem__status md-icon::part(icon){line-height:.75rem;vertical-align:top}.md-taskitem__mediatype .md-taskitem__status.hold{background:var(--taskitem-status-pause-bg-color,#ffd98c)}.md-taskitem__content{align-content:stretch;align-items:flex-start;align-self:stretch;display:flex;flex:0 1 auto;flex-direction:column;justify-content:center;width:calc(100% - calc(2.625rem + 6.25rem))}.md-taskitem__content_popover_title{display:block;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;color:var(--taskitem-text-color,#545454);font-family:"CiscoSansTT Bold","Helvetica Neue",Helvetica,Arial,sans-serif;font-size:14px;line-height:.9375rem;margin-bottom:.5rem;width:calc(100%)}.md-taskitem__content_title{display:block;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;font-size:16px;line-height:1.1875rem;margin-bottom:.5rem;width:calc(100%)}.md-taskitem__content_title.mainTitle{color:var(--taskitem-text-color,#545454);font-family:"CiscoSansTT Bold","Helvetica Neue",Helvetica,Arial,sans-serif}.md-taskitem__content_inner{display:flex;flex:0 1 auto;width:100%}.md-taskitem__content_queue{display:block;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;font-size:12px;line-height:.875rem;width:100%}.md-taskitem__content_chat{color:var(--taskitem-chat-text-color,#545454);display:flex;font-size:12px;line-height:.875rem;margin-top:.5rem;position:relative;width:100%}.md-taskitem__content_chat .new-chat_massages{display:block;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;padding-right:2.5rem;width:calc(100% - $taskitem-main-margin)}.md-taskitem__addition{align-items:flex-end;display:flex;flex-direction:column;margin-left:.5rem;text-align:right;width:6.25rem}.md-taskitem__addition .new-chat-quantity{background:var(--taskitem-chat-quantity-bg-color,#9df);border-radius:9px;color:var(--taskitem-chat-quantity-text-color,#103c62);display:inline-block;font-size:10px;line-height:.875rem;min-width:18px;padding:.125rem .25rem;text-align:center}`,l=function(t,e,i,a){var o,s=arguments.length,n=s<3?e:null===a?a=Object.getOwnPropertyDescriptor(e,i):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)n=Reflect.decorate(t,e,i,a);else for(var m=t.length-1;m>=0;m--)(o=t[m])&&(n=(s<3?o(n):s>3?o(e,i,n):o(e,i))||n);return s>3&&n&&Object.defineProperty(e,i,n),n};!function(t){let e=class extends n.LitElement{constructor(){super(...arguments),this.mediaType="call",this.status="",this.popovertitle="",this.title="",this.queue="",this.accepted=!1,this.quantity=0,this.lastmessage="",this.selected=!1,this.customAriaLabel="",this.renderTaskType=()=>{switch(this.mediaType.toLowerCase()){case"telephony":return n.html`
            <md-badge color="green" circle>
              <md-icon name="handset-active_16"></md-icon>
            </md-badge>
          `;case"outbound telephony":return n.html`
            <md-badge color="green" circle>
              <md-icon name="outgoing-call-active_16"></md-icon>
            </md-badge>
          `;case"inbound telephony":return n.html`
            <md-badge color="green" circle>
              <md-icon name="incoming-call-active_16"></md-icon>
            </md-badge>
          `;case"callback":return n.html`
            <md-badge color="lime" circle>
              <md-icon name="icon-icon-callback_18"></md-icon>
            </md-badge>
          `;case"chat":return n.html`
            <md-badge color="blue" circle>
              <md-icon name="chat-active_16"></md-icon>
            </md-badge>
          `;case"email":return n.html`
            <md-badge color="violet" circle>
              <md-icon name="email-active_16"></md-icon>
            </md-badge>
          `;case"sms":return n.html`
            <md-badge color="darkmint" circle>
              <md-icon name="sms_16" color="white"></md-icon>
            </md-badge>
          `;case"facebook":return n.html`
            <md-badge bgColor="#0078FF" circle>
              <md-icon name="messenger_16" color="white"></md-icon>
            </md-badge>
          `;case"whatsapp":return n.html`
            <md-badge bgColor="#25D366" circle>
              <md-icon name="whatsApp_16" color="white"></md-icon>
            </md-badge>
          `;default:return n.html`
            <slot name="task-type"></slot>
          `}},this.renderStatus=()=>{switch(this.status){case"consulting":return n.html`
            <md-icon name="headset_12"></md-icon>
          `;case"play":return n.html`
            <md-icon name="play_12"></md-icon>
          `;case"hold":return n.html`
            <md-icon name="pause_12"></md-icon>
          `;case"conference":return n.html`
            <md-icon name="meet_12"></md-icon>
          `;case"transfered":return n.html`
            <md-icon name="assign-privilege_12"></md-icon>
          `;case"courtesy_callback":return n.html`
            <md-icon name="call-log_12"></md-icon>
          `;case"campaign":return n.html`
            <md-icon name="announcement_12"></md-icon>
          `;default:return n.html`
            <slot name="task-status"></slot>
          `}}}handleClick(t){this.dispatchEvent(new CustomEvent("taskitem-click",{composed:!0,bubbles:!0,detail:{srcEvent:t}})),this.blur()}handleKeyDown(t){t.preventDefault(),this.dispatchEvent(new CustomEvent("taskitem-keydown",{detail:{key:t.code},bubbles:!0,composed:!0}))}renderChatCount(){return this.quantity>0?this.quantity>99?n.html`
              <span class="new-chat-quantity">99+</span>
            `:n.html`
              <span class="new-chat-quantity">${this.quantity}</span>
            `:m.nothing}getAriaLabel(){return this.customAriaLabel?this.customAriaLabel:`${this.mediaType} ${this.status} ${this.title} ${this.queue} ${this.quantity?this.quantity:""} ${this.lastmessage}`}static get styles(){return[s.a,c]}render(){return n.html`
        <div
          part="task-item-container"
          class="md-taskitem ${Object(r.classMap)({selected:this.selected})}"
          tabindex="0"
          aria-selected="${this.selected}"
          @click=${t=>this.handleClick(t)}
          @keydown=${t=>this.handleKeyDown(t)}
          aria-label=${this.getAriaLabel()}
        >
          <div class="md-taskitem__mediatype">
            ${this.renderTaskType()}
            ${this.status?n.html`
                  <span class=${"md-taskitem__status "+this.status}>
                    ${this.renderStatus()}
                  </span>
                `:m.nothing}
          </div>
          <div class="md-taskitem__content" part="task-item-content">
            ${this.popovertitle?n.html`
                  <span class="md-taskitem__content_popover_title">${this.popovertitle}</span>
                `:m.nothing}
            ${this.title?n.html`
                  <span class="md-taskitem__content_title ${Object(r.classMap)({mainTitle:!this.popovertitle})}"
                    >${this.title}</span
                  >
                `:m.nothing}
            <div class="md-taskitem__content_inner">
              <span class="md-taskitem__content_queue">
                ${this.queue.length>0?this.queue:n.html`
                      <slot name="queue"></slot>
                    `}
              </span>
            </div>
            ${this.lastmessage?n.html`
                  <span class="md-taskitem__content_chat">
                    <span class="new-chat_massages">${this.lastmessage}</span>
                  </span>
                `:m.nothing}
          </div>
          <div class="md-taskitem__addition">
            <slot></slot>
            ${this.renderChatCount()}
          </div>
        </div>
      `}};l([Object(n.property)({type:String})],e.prototype,"mediaType",void 0),l([Object(n.property)({type:String})],e.prototype,"status",void 0),l([Object(n.property)({type:String})],e.prototype,"popovertitle",void 0),l([Object(n.property)({type:String})],e.prototype,"title",void 0),l([Object(n.property)({type:String})],e.prototype,"queue",void 0),l([Object(n.property)({type:Boolean})],e.prototype,"accepted",void 0),l([Object(n.property)({type:Number})],e.prototype,"quantity",void 0),l([Object(n.property)({type:String})],e.prototype,"lastmessage",void 0),l([Object(n.property)({type:Boolean})],e.prototype,"selected",void 0),l([Object(n.property)({type:String})],e.prototype,"customAriaLabel",void 0),e=l([Object(o.a)("md-task-item")],e),t.ELEMENT=e}(a||(a={}))}}]);