(window["momentum-web-components-[id]"]=window["momentum-web-components-[id]"]||[]).push([[35],{68:function(t,e,o){"use strict";o.r(e),o.d(e,"tooltipPlacement",(function(){return c})),o.d(e,"tooltipStrategy",(function(){return d})),o.d(e,"Tooltip",(function(){return h}));var s=o(7),n=o(4),i=o(5),p=o(0),r=o(3),l=o(59),a=function(t,e,o,s){var n,i=arguments.length,p=i<3?e:null===s?s=Object.getOwnPropertyDescriptor(e,o):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)p=Reflect.decorate(t,e,o,s);else for(var r=t.length-1;r>=0;r--)(n=t[r])&&(p=(i<3?n(p):i>3?n(e,o,p):n(e,o))||p);return i>3&&p&&Object.defineProperty(e,o,p),p};const c=["auto","auto-start","auto-end","left-start","left","left-end","right-start","right","right-end","top-start","top","top-end","bottom-start","bottom","bottom-end"],d=["fixed","absolute"];var h;!function(t){let e=class extends(Object(s.a)(p.LitElement)){constructor(){super(...arguments),this.message="",this.placement="auto",this.disabled=!1,this.opened=!1,this.slotContent=null}handleFocusIn(t){super.handleFocusIn&&super.handleFocusIn(t),this.notifyTooltipCreate()}handleFocusOut(t){super.handleFocusOut&&super.handleFocusOut(t),this.notifyTooltipDestroy()}openTooltip(){this.dispatchEvent(new CustomEvent("tooltip-create",{bubbles:!0,composed:!0,detail:Object.assign({placement:this.placement,reference:this.reference,popper:this.popper},!this.message&&{slotContent:this.slotContent})}))}closeTooltip(){this.dispatchEvent(new CustomEvent("tooltip-destroy",{bubbles:!0,composed:!0,detail:{placement:this.placement,reference:this.reference,popper:this.popper}}))}changeMessage(){this.dispatchEvent(new CustomEvent("tooltip-message",{bubbles:!0,composed:!0,detail:{placement:this.placement,reference:this.reference,popper:this.popper}}))}changeSlotContent(t){this.dispatchEvent(new CustomEvent("tooltip-slot",{bubbles:!0,composed:!0,detail:{placement:this.placement,reference:this.reference,popper:this.popper,slotContent:t}}))}notifyTooltipCreate(){this.disabled||(this.opened=!0)}notifyTooltipDestroy(){this.disabled||(this.opened=!1)}handleSlotContentChange(t){const e=t.target;if(e){const t=e.assignedElements({flatten:!0});t.length&&(this.slotContent&&this.changeSlotContent(t),this.slotContent=t)}}updated(t){super.updated(t),t.has("opened")&&(this.opened?this.openTooltip():this.closeTooltip()),t.has("message")&&this.changeMessage()}get tooltipClassMap(){return{"md-tooltip--disabled":this.disabled}}render(){return p.html`
        <div class="md-tooltip ${Object(r.classMap)(this.tooltipClassMap)}">
          <div class="md-tooltip__popper" role="tooltip">
            <div class="md-tooltip__content">
              ${this.message?this.message:p.html`
                    <slot name="tooltip-content" @slotchange=${this.handleSlotContentChange}></slot>
                  `}
            </div>
            <div id="arrow" class="md-tooltip__arrow" data-popper-arrow></div>
          </div>
          <div
            class="md-tooltip__reference"
            @mouseenter=${()=>this.notifyTooltipCreate()}
            @mouseleave=${()=>this.notifyTooltipDestroy()}
            aria-describedby="tooltip"
          >
            <slot></slot>
          </div>
        </div>
      `}static get styles(){return[n.a,l.a]}};a([Object(p.property)({type:String})],e.prototype,"message",void 0),a([Object(p.property)({type:String,reflect:!0})],e.prototype,"placement",void 0),a([Object(p.property)({type:Boolean,reflect:!0})],e.prototype,"disabled",void 0),a([Object(p.property)({type:Boolean,reflect:!0})],e.prototype,"opened",void 0),a([Object(p.query)(".md-tooltip__popper")],e.prototype,"popper",void 0),a([Object(p.query)(".md-tooltip__reference")],e.prototype,"reference",void 0),e=a([Object(i.a)("md-tooltip")],e),t.ELEMENT=e}(h||(h={}))}}]);