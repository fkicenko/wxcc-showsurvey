(window["momentum-web-components-[id]"]=window["momentum-web-components-[id]"]||[]).push([[73],{95:function(e,t,s){"use strict";s.r(t),s.d(t,"RadioGroup",(function(){return i}));var i,d=s(1),o=s(7),c=s(4),n=s(5),r=s(0),a=s(64),h=function(e,t,s,i){var d,o=arguments.length,c=o<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,s):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)c=Reflect.decorate(e,t,s,i);else for(var n=e.length-1;n>=0;n--)(d=e[n])&&(c=(o<3?d(c):o>3?d(t,s,c):d(t,s))||c);return o>3&&c&&Object.defineProperty(t,s,c),c};!function(e){let t=class extends(Object(o.d)(r.LitElement)){constructor(){super(...arguments),this.label="group",this.checked=-1,this.alignment="vertical"}firstUpdated(e){super.firstUpdated(e),this.setAttribute("role","radiogroup"),this.setAttribute("aria-label",this.label)}updated(e){super.updated(e),e.has("slotted")&&this.setFirstChecked()}get selectedRadioValue(){return this.slotted[this.selected].value}notifySelectedChange(){this.dispatchEvent(new CustomEvent("radio-change",{detail:{selected:this.selectedRadioValue},bubbles:!0,composed:!0}))}connectedCallback(){super.connectedCallback(),this.addEventListener("keydown",this.handleKeyDown),this.addEventListener("click",this.handleClick)}disconnectedCallback(){super.disconnectedCallback(),this.removeEventListener("keydown",this.handleKeyDown),this.removeEventListener("click",this.handleClick)}setFirstChecked(){-1!==this.checked&&(this.selected=this.checked,this.setChecked(this.checked))}findRadioIndex(e){const t=e.composedPath();return this.slotted.findIndex(e=>t.includes(e))}findCheckedRadioIndex(){return this.slotted.findIndex(e=>e.checked)}setChecked(e){const t=this.findCheckedRadioIndex();-1!==t&&t!==e&&(this.slotted[t].checked=!1),this.slotted[e].checked=!0}switchRadioOnArrowPress(e,t=1){const s=super.getAvailableSelectedIndex(e,t);-1!==s&&(this.selected=s,this.setChecked(s),this.notifySelectedChange())}isRadioDisabled(e){return this.slotted[e].disabled}handleClick(e){const t=this.findRadioIndex(e);-1!==t&&(this.isRadioDisabled(t)||(this.selected=t,this.setChecked(t),this.notifySelectedChange()))}handleKeyDown(e){const{code:t}=e;switch(t){case d.a.Enter:case d.a.Space:this.isRadioDisabled(this.selected)||(this.setChecked(this.selected),this.notifySelectedChange());break;case d.a.ArrowUp:case d.a.ArrowLeft:0===this.selected?this.switchRadioOnArrowPress(this.slotted.length-1,-1):this.switchRadioOnArrowPress(this.selected-1,-1);break;case d.a.ArrowDown:case d.a.ArrowRight:this.selected===this.slotted.length-1?this.switchRadioOnArrowPress(0):this.switchRadioOnArrowPress(this.selected+1)}}get slotElement(){return this.radioSlot}static get styles(){return[c.a,a.a]}render(){return r.html`
        <div>
          <slot name="radio"></slot>
        </div>
      `}};h([Object(r.property)({type:String,attribute:"group-label"})],t.prototype,"label",void 0),h([Object(r.property)({type:Number,reflect:!0})],t.prototype,"checked",void 0),h([Object(r.property)({type:String,reflect:!0})],t.prototype,"alignment",void 0),h([Object(r.query)("slot[name='radio']")],t.prototype,"radioSlot",void 0),t=h([Object(n.a)("md-radiogroup")],t),e.ELEMENT=t}(i||(i={}))}}]);