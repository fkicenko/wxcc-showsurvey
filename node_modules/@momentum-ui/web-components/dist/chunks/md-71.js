(window["momentum-web-components-[id]"]=window["momentum-web-components-[id]"]||[]).push([[71],{116:function(t,e,o){"use strict";o.r(e),o.d(e,"PhoneInput",(function(){return i}));o(77),o(24);var i,n=o(5),r=o(4),a=o(78),d=o(79),l=o(63),p=o(0),s=o(2),h=o(36),u=p.css`.md-phone-input__container{--combo-box-contaier-width:100px;display:flex;position:relative}.md-phone-input__container span.flag-box{align-items:center;border:1px solid var(--input-default-border-color,#ccc);border-bottom-left-radius:.25rem;border-right:none;border-top-left-radius:.25rem;display:flex;height:2.125rem;justify-content:center;position:relative;width:2.25rem}.md-phone-input__container span.flag-box .flag-svg-wrapper{justify-content:center}.md-phone-input__container .flag-svg-wrapper{align-items:center;display:flex;width:2rem}.md-phone-input__container .flag-svg-wrapper img{max-height:.7rem}.md-phone-input__container md-combobox{width:var(--combo-box-contaier-width)}.md-phone-input__container md-combobox::part(combobox){position:initial}.md-phone-input__container md-combobox::part(group){border-bottom-right-radius:0;border-right-width:0;border-top-right-radius:0}.md-phone-input__container md-combobox::part(multiwrap){overflow-x:hidden}.md-phone-input__container md-combobox::part(multiwrap-input){padding-left:0;padding-right:0;width:100%}.md-phone-input__container md-combobox::part(combobox-options){top:2.5rem}.md-phone-input__container md-combobox::part(label){width:100%}.md-phone-input__container md-input::part(input){border-bottom-left-radius:0;border-top-left-radius:0;padding-right:2.75rem}.md-phone-input__container md-input::part(message){margin-left:calc(var(--combo-box-contaier-width) * -1);width:calc(100% + var(--combo-box-contaier-width))}.md-phone-input__container .md-phone-input__option{align-items:center;display:flex;justify-content:start}.md-phone-input__container .md-phone-input__option :nth-child(3){margin-left:1rem}.md-phone-input__container md-input[disabled]::part(input){background:var(--phone-input-disabled-bg-color);border:1px solid var(--phone-input-default-border-color);color:var(--md-disabled-text-color)}.md-phone-input__container md-input[disabled]::part(input)::placeholder{border:none}`,c=function(t,e,o,i){var n,r=arguments.length,a=r<3?e:null===i?i=Object.getOwnPropertyDescriptor(e,o):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(t,e,o,i);else for(var d=t.length-1;d>=0;d--)(n=t[d])&&(a=(r<3?n(a):r>3?n(e,o,a):n(e,o))||a);return r>3&&a&&Object.defineProperty(e,o,a),a};!function(t){let e=class extends p.LitElement{constructor(){super(...arguments),this.codePlaceholder="+1",this.numberPlaceholder="Enter Phone Number",this.countryCallingCode="",this.showFlags=!1,this.pill=!1,this.disabled=!1,this.value="",this.errorMessage="",this.showErrorMessage=!1,this.countryCode="US",this.codeList=[],this.formattedValue="",this.isValid=!0}connectedCallback(){super.connectedCallback(),this.codeList=Object(a.customArray)({name:"{countryNameEn}",value:"{countryCallingCode}",code:"{countryCode}"}),this.validateInput(this.value)}getCountryFlag(t){return p.html`
        <span class="flag-svg-wrapper">
          <img src="${Object(d.findFlagUrlByIso2Code)(t)}" />
        </span>
      `}countryCodeOptionTemplate(t,e){return p.html`
        <div
          part="option"
          class="md-phone-input__option"
          display-value="+${t.value}"
          slot=${e}
          aria-label="+${t.value}, ${t.name}, ${t.code}"
        >
          ${this.showFlags?this.getCountryFlag(t.code):s.nothing}
          <span>${t.name}</span>
          <span>+${t.value}</span>
        </div>
      `}validateNumber(){this.isValid=!!this.value&&Object(l.isValidNumberForRegion)(this.value,this.countryCode)}handleCountryChange(t){var e;if(!t.detail.value||!t.detail.value.id)return this.countryCode="US",this.countryCallingCode="",void this.validateNumber();this.countryCallingCode=t.detail.value.id,this.countryCode=null===(e=t.detail.value.id.split(",")[2])||void 0===e?void 0:e.trim(),this.validateNumber()}handlePhoneChange(t){this.value=t.detail.value,t.stopPropagation(),this.dispatchEvent(new CustomEvent("phoneinput-change",{bubbles:!0,composed:!0,detail:{srcEvent:t,value:`${this.countryCallingCode}${this.value}`,isValid:this.isValid,phoneNumber:this.value}}))}handleKeydown(t){this.isValid=!0,t.stopPropagation(),this.dispatchEvent(new CustomEvent("phoneinput-keydown",{bubbles:!0,composed:!0,detail:{srcEvent:t,value:`${this.countryCallingCode}${this.value}`,isValid:this.isValid,phoneNumber:this.value}}))}handleBlur(t){this.validateInput(this.value),this.validateNumber(),t.stopPropagation(),this.dispatchEvent(new CustomEvent("phoneinput-blur",{bubbles:!0,composed:!0,detail:{srcEvent:t,value:`${this.countryCallingCode}${this.value}`,isValid:this.isValid,phoneNumber:this.value}}))}validateInput(t){this.formattedValue=new l.AsYouType(this.countryCode).input(t)}getFormatedCountryCallingCode(){var t;return{id:this.countryCallingCode,value:null===(t=this.countryCallingCode.split(",")[0])||void 0===t?void 0:t.trim()}}getModStyle(){return p.html`
        <style>
          .md-phone-input__container md-combobox {
            width: 5.625rem;
          }

          md-combobox::part(group) {
            border-left-style: none;
            border-bottom-left-radius: 0;
            border-top-left-radius: 0;
            padding-left: 0;
          }
        </style>
      `}static get styles(){return[r.a,u]}render(){return p.html`
        ${this.showFlags?this.getModStyle():s.nothing}
        <div class="md-phone-input__container">
          ${this.showFlags?p.html`
                <span class="flag-box">${this.getCountryFlag(this.countryCode)}</span>
              `:s.nothing}
          <md-combobox
            part="combobox"
            ?disabled=${this.disabled}
            shape="${this.pill?"pill":"none"}"
            placeholder="${this.codePlaceholder}"
            .value="${this.countryCallingCode?[this.getFormatedCountryCallingCode()]:[]}"
            @change-selected="${t=>this.handleCountryChange(t)}"
            with-custom-content
          >
            ${Object(h.repeat)(this.codeList,t=>t.name,(t,e)=>this.countryCodeOptionTemplate(t,e))}
          </md-combobox>
          <md-input
            part="md-input"
            ?disabled=${this.disabled}
            placeholder=${this.numberPlaceholder}
            @input-change="${t=>this.handlePhoneChange(t)}"
            @input-blur="${t=>this.handleBlur(t)}"
            @input-keydown="${t=>this.handleKeydown(t)}"
            shape="${this.pill?"pill":"none"}"
            clear
            type="tel"
            value="${this.formattedValue}"
            .messageArr="${!this.isValid||this.showErrorMessage?[{type:"error",message:this.errorMessage}]:[]}"
          ></md-input>
        </div>
      `}};c([Object(p.property)({type:String,reflect:!0})],e.prototype,"codePlaceholder",void 0),c([Object(p.property)({type:String})],e.prototype,"numberPlaceholder",void 0),c([Object(p.property)({type:String,attribute:"country-calling-code"})],e.prototype,"countryCallingCode",void 0),c([Object(p.property)({type:Boolean,attribute:"show-flags"})],e.prototype,"showFlags",void 0),c([Object(p.property)({type:Boolean})],e.prototype,"pill",void 0),c([Object(p.property)({type:Boolean})],e.prototype,"disabled",void 0),c([Object(p.property)({type:String})],e.prototype,"value",void 0),c([Object(p.property)({type:String})],e.prototype,"errorMessage",void 0),c([Object(p.property)({type:Boolean})],e.prototype,"showErrorMessage",void 0),c([Object(p.internalProperty)()],e.prototype,"countryCode",void 0),c([Object(p.internalProperty)()],e.prototype,"codeList",void 0),c([Object(p.internalProperty)()],e.prototype,"formattedValue",void 0),c([Object(p.internalProperty)()],e.prototype,"isValid",void 0),c([Object(p.query)("md-combobox")],e.prototype,"combobox",void 0),e=c([Object(n.a)("md-phone-input")],e),t.ELEMENT=e}(i||(i={}))}}]);