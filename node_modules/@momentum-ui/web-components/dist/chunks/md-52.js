(window["momentum-web-components-[id]"]=window["momentum-web-components-[id]"]||[]).push([[52],{85:function(e,t,i){"use strict";i.r(t),i.d(t,"Checkbox",(function(){return s}));var s,c=i(1),n=i(7),a=i(4),d=i(5),o=i(0),r=i(58),h=function(e,t,i,s){var c,n=arguments.length,a=n<3?t:null===s?s=Object.getOwnPropertyDescriptor(t,i):s;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,i,s);else for(var d=e.length-1;d>=0;d--)(c=e[d])&&(a=(n<3?c(a):n>3?c(t,i,a):c(t,i))||a);return n>3&&a&&Object.defineProperty(t,i,a),a};!function(e){let t=class extends(Object(n.a)(o.LitElement)){constructor(){super(...arguments),this.autofocus=!1,this._checked=!1,this._indeterminate=!1,this._disabled=!1,this.label="",this.tabIndex=0}get checked(){return this._checked}set checked(e){const t=this._checked;this._checked=e,this.indeterminate||this.setAttribute("aria-checked",""+e),this.requestUpdate("checked",t)}get indeterminate(){return this._indeterminate}set indeterminate(e){const t=this._indeterminate;this._indeterminate=e,this.setAttribute("aria-checked","mixed"),this.requestUpdate("indeterminate",t)}get disabled(){return this._disabled}set disabled(e){const t=this._disabled;this._disabled=e,this.setAttribute("aria-disabled",""+e),this.tabIndex=e?-1:0,this.requestUpdate("disabled",t)}static get styles(){return[a.a,r.a]}toggleCheckbox(){this.checked=!this.checked}isCheckboxActive(){return this.disabled||this.indeterminate}handleClick(e){this.isCheckboxActive()?e.stopPropagation():(this.toggleCheckbox(),this.handleChange(e))}handleKeyDown(e){const{code:t}=e;t!==c.a.Space&&t!==c.a.Enter||(e.preventDefault(),this.isCheckboxActive()?e.stopPropagation():(this.toggleCheckbox(),this.handleChange(e)))}handleChange(e){this.dispatchEvent(new CustomEvent("checkbox-change",{bubbles:!0,composed:!0,detail:{sourceEvent:e}}))}firstUpdated(e){super.firstUpdated(e),this.setAttribute("role","checkbox"),this.label&&this.setAttribute("aria-label",this.label)}connectedCallback(){super.connectedCallback(),this.addEventListener("keydown",this.handleKeyDown),this.addEventListener("click",this.handleClick)}disconnectedCallback(){super.disconnectedCallback(),this.removeEventListener("keydown",this.handleKeyDown),this.removeEventListener("click",this.handleClick)}update(e){super.update(e),e.has("indeterminate")&&(this.checked=!1)}updated(e){super.updated(e),e.has("indeterminate")&&(this.input.indeterminate=this.indeterminate)}render(){return o.html`
        <input
          class="checkbox-input"
          type="checkbox"
          part="checkbox-input"
          ?checked=${this.checked}
          ?disabled=${this.disabled}
          ?autofocus=${this.autofocus}
          aria-hidden="true"
        />
        <label part="checkbox-label" class="checkbox-label">
          <slot></slot>
        </label>
      `}};h([Object(o.property)({type:Boolean,reflect:!0})],t.prototype,"autofocus",void 0),h([Object(o.property)({type:Boolean,reflect:!0})],t.prototype,"checked",null),h([Object(o.property)({type:Boolean,reflect:!0})],t.prototype,"indeterminate",null),h([Object(o.property)({type:Boolean,reflect:!0})],t.prototype,"disabled",null),h([Object(o.property)({type:String})],t.prototype,"label",void 0),h([Object(o.property)({type:Number,reflect:!0})],t.prototype,"tabIndex",void 0),h([Object(o.query)(".checkbox-input")],t.prototype,"input",void 0),t=h([Object(d.a)("md-checkbox")],t),e.ELEMENT=t}(s||(s={}))}}]);