(window["momentum-web-components-[id]"]=window["momentum-web-components-[id]"]||[]).push([[61],{110:function(e,t,o){"use strict";o.r(t),o.d(t,"Dropdown",(function(){return u}));o(15);var i=o(1),s=o(7),n=o(4),d=o(0),r=o(2),l=o(13),a=o(36),p=d.css`:host(:focus){box-shadow:none!important;outline:0!important}:host .md-dropdown{display:flex;flex-direction:column;position:relative}:host .md-dropdown-select{display:none}:host .md-dropdown-label{align-content:center;align-items:center;display:flex;flex-flow:row nowrap;justify-content:center;background-color:var(--md-primary-bg-color);border:1px solid var(--md-secondary-seperator-color);border-radius:var(--dropdown-group-radius,.25rem);min-height:2rem;padding:0 .75rem}:host .md-dropdown-label--text{align-content:center;align-items:center;display:flex;flex-flow:row nowrap;justify-content:flex-start;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;color:var(--md-secondary-text-color);line-height:2rem;outline:0;width:6.25rem;flex:1 0 auto}:host .md-dropdown-label--icon{transition:all .15s linear;display:inline-block;background-color:transparent;border:none;cursor:pointer;height:1.75rem;margin:0;margin-left:calc(.25rem * 3);outline:0;padding:0;padding-top:calc(.25rem / 2);position:relative;vertical-align:bottom}:host .md-dropdown-label--icon md-icon{color:var(--md-primary-text-color,#f7f7f7)}:host .md-dropdown-label:hover{background-color:var(--dropdown-bg-color-hover,#dedede)}:host .md-dropdown-label:active{background-color:var(--dropdown-bg-color-active,#ccc)}:host .md-dropdown-list{list-style:none;margin:0;padding:0;display:none;background-color:var(--md-primary-bg-color);border-radius:.5rem;box-shadow:0 4px 8px rgba(0,0,0,.16),0 0 1px rgba(0,0,0,.16);left:0;overflow:auto;overflow-x:hidden;position:absolute;top:calc(100% + .25rem);width:100%;z-index:1}:host .md-dropdown-option{align-content:center;align-items:center;display:flex;flex-flow:row nowrap;justify-content:center;color:var(--md-primary-text-color,#f7f7f7);padding:.4375rem .75rem .5rem}:host .md-dropdown-option .select-label{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;cursor:default;width:calc(100% - 1rem);display:block}:host .md-dropdown-option:hover{background-color:var(--dropdown-list-item-bg-color-hover,#c9f4ff)}:host .md-dropdown-option[focused]{background-color:var(--dropdown-list-item-bg-color-focus,#91ebff)}:host .md-dropdown__expanded .md-dropdown-list{display:block}:host .md-dropdown__expanded .md-dropdown-label--icon{transform:rotate(180deg)}:host .md-dropdown--pill .md-dropdown-label{border-radius:18px}:host([focus-visible]) .md-dropdown .md-dropdown-label{border-color:var(--dropdown-border-color-focus,#005e7d);box-shadow:none}:host([disabled]) .md-dropdown .md-dropdown-label{background-color:var(--md-tertiary-bg-color)}:host([disabled]) .md-dropdown .md-dropdown-label:active,:host([disabled]) .md-dropdown .md-dropdown-label:hover{background-color:var(--md-tertiary-bg-color);pointer-events:none}:host([disabled]) .md-dropdown .md-dropdown-label:active>md-icon,:host([disabled]) .md-dropdown .md-dropdown-label:hover>md-icon{opacity:.3}`,c=function(e,t,o,i){var s,n=arguments.length,d=n<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,o):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)d=Reflect.decorate(e,t,o,i);else for(var r=e.length-1;r>=0;r--)(s=e[r])&&(d=(n<3?s(d):n>3?s(t,o,d):s(t,o))||d);return n>3&&d&&Object.defineProperty(t,o,d),d},h=function(e,t,o,i){return new(o||(o=Promise))((function(s,n){function d(e){try{l(i.next(e))}catch(e){n(e)}}function r(e){try{l(i.throw(e))}catch(e){n(e)}}function l(e){var t;e.done?s(e.value):(t=e.value,t instanceof o?t:new o((function(e){e(t)}))).then(d,r)}l((i=i.apply(e,t||[])).next())}))};var u;!function(e){let t=class extends(Object(s.a)(d.LitElement)){constructor(){super(...arguments),this.title="Select...",this.options=[],this.optionId="",this.optionValue="",this.defaultOption="",this.disabled=!1,this.allowUnselected=!1,this.visibleOptions=8,this.renderOptions=[],this.selectedKey="",this.expanded=!1,this.focusedIndex=-1,this.lastMaxHeight="",this.onOutsideClick=e=>{let t=!1;const o=e.composedPath();o.length&&(t=!!o.find(e=>e===this),t||this.collapse())},this.onKeyDown=e=>{switch(e.code){case i.a.Enter:this.expanded?(this.select(),this.collapse()):this.expand();break;case i.a.ArrowDown:this.expanded?this.focusNext():this.expand();break;case i.a.ArrowUp:this.expanded?this.focusPrev():this.expand();break;case i.a.Home:this.expanded?this.focusFirst():this.expand();break;case i.a.End:this.expanded?this.focusLast():this.expand();break;case i.a.Escape||i.a.Backspace:this.expanded&&this.collapse()}}}connectedCallback(){super.connectedCallback(),this.setupEvents()}disconnectedCallback(){super.disconnectedCallback(),this.teardownEvents()}firstUpdated(e){super.firstUpdated(e),this.setAttribute("tabindex","0"),e.forEach((e,t)=>{if("defaultOption"===t&&this.defaultOption){const{key:e}=this.getOptionKeyValuePair(this.defaultOption);this.selectedKey=e}})}updated(e){super.updated(e),e.forEach((e,t)=>{if("options"===t&&this.updateRenderOptions(),"selectedKey"===t){const e=this.renderOptions.findIndex(e=>e.key===this.selectedKey);-1!==e&&this.focusToIndex(e)}"expanded"===t&&this.updateListDOM(),"focusedIndex"===t&&this.updateListDOM(),"disabled"===t&&this.setAttribute("tabindex",this.disabled?"-1":"0")})}updateRenderOptions(){const e=[];this.focusReset();const t=this.options.reduce((t,o)=>{const{key:i,value:s}=this.getOptionKeyValuePair(o);return-1!==e.indexOf(i)?console.error(`Dropdown already have option key: "${i}". Ignoring `):i?(e.push(i),t.push({key:i,value:s,option:o})):console.error(`Dropdown key is not defined: "${i}". (value: "${s}"). Ignoring `),t},[]);this.allowUnselected&&t.unshift({key:"",value:this.title}),this.renderOptions=t}updateListDOM(){return h(this,void 0,void 0,(function*(){this.expanded&&(yield this.resizeDropdownList(),yield this.scrollToIndex(this.focusedIndex))}))}resizeDropdownList(){return h(this,void 0,void 0,(function*(){yield new Promise(e=>requestAnimationFrame(()=>{if(this.optionsListItems)if(this.optionsListItems.length>this.visibleOptions){const e=[...this.optionsListItems].slice(0,this.visibleOptions).reduce((e,t)=>e+t.offsetHeight,0)+"px";this.lastMaxHeight!==e&&(this.optionsList.style.maxHeight=e,this.lastMaxHeight=e)}else{const e="auto";this.lastMaxHeight!==e&&(this.optionsList.style.maxHeight=e,this.lastMaxHeight=e)}e()}))}))}handleFocusIn(e){this.disabled||super.handleFocusIn&&super.handleFocusIn(e),this.dispatchEvent(new CustomEvent("dropdown-focus-in",{composed:!0,bubbles:!0}))}handleFocusOut(e){super.handleFocusOut&&super.handleFocusOut(e),this.dispatchEvent(new CustomEvent("dropdown-focus-out",{composed:!0,bubbles:!0}))}static get styles(){return[n.a,p]}setupEvents(){document.addEventListener("click",this.onOutsideClick),this.addEventListener("keydown",this.onKeyDown)}teardownEvents(){document.removeEventListener("click",this.onOutsideClick),this.removeEventListener("keydown",this.onKeyDown)}expand(){this.expanded=!0,-1===this.focusedIndex&&this.focusNext()}collapse(){this.expanded=!1}toggle(){this.expanded?this.collapse():this.expand()}select(){if(-1!==this.focusedIndex){const e=this.renderOptions[this.focusedIndex],t=e.key;t!==this.selectedKey&&(this.selectedKey=t,this.dispatchEvent(new CustomEvent("dropdown-selected",{composed:!0,bubbles:!0,detail:{option:e.option?e.option:e.key}})))}}onLabelClick(){this.toggle()}focusFirst(){this.renderOptions.length&&(this.focusedIndex=0)}focusLast(){this.renderOptions.length&&(this.focusedIndex=this.renderOptions.length-1)}focusNext(){this.renderOptions.length&&(-1!==this.focusedIndex&&this.focusedIndex<this.renderOptions.length-1?this.focusedIndex++:this.focusFirst())}focusPrev(){this.renderOptions.length&&(this.focusedIndex>0?this.focusedIndex--:this.focusLast())}focusToIndex(e){this.renderOptions.length&&e>=0&&e<=this.renderOptions.length-1&&(this.focusedIndex=e)}focusReset(){this.focusedIndex=-1}scrollToIndex(e){return h(this,void 0,void 0,(function*(){yield new Promise(t=>{requestAnimationFrame(()=>{if(this.optionsListItems&&this.optionsListItems.length>this.visibleOptions&&e>=0&&this.optionsListItems.length>e){let t=0;const{top:o,bottom:i}=this.optionsList.getBoundingClientRect(),s=this.optionsListItems[e],n=this.optionsListItems[e+1]||s,d=this.optionsListItems[e-1]||s,r=n.getBoundingClientRect(),l=d.getBoundingClientRect();r.bottom>i?t=r.bottom-i+2:l.top<o&&(t=l.top-o-2),this.optionsList.scrollTop+=t}t()})})}))}getOptionKeyValuePair(e){if("string"==typeof e)return{key:e.trim(),value:e};if(e&&"object"==typeof e){const t=Object.keys(e),o=Object.values(e);if(t.length){if(1===t.length||!this.optionId)return{key:t[0],value:o[0]};if(this.optionId)return{key:e[this.optionId],value:e[this.optionValue||this.optionId]}}}return{key:"undefined",value:"undefined"}}get labelTitle(){if(this.selectedKey){const e=this.renderOptions.find(e=>e.key===this.selectedKey);if(e)return e.value}return this.title}get dropDownClassMap(){return{"md-dropdown__expanded":this.expanded}}render(){return r.html`
        <div class="md-dropdown ${Object(l.classMap)(this.dropDownClassMap)}" part="dropdown">
          <label
            class="md-dropdown-label"
            aria-expanded="${this.expanded}"
            aria-label="${this.labelTitle}"
            aria-controls="md-dropdown-list"
            ?disabled="${this.disabled}"
            @click="${()=>this.onLabelClick()}"
            part="dropdown-header"
          >
            <span class="md-dropdown-label--text">${this.labelTitle}</span>
            <span class="md-dropdown-label--icon">
              <md-icon name="icon-arrow-down_16"></md-icon>
            </span>
          </label>
          <ul
            id="md-dropdown-list"
            class="md-dropdown-list"
            role="listbox"
            aria-label="${this.labelTitle}"
            aria-hidden="${!this.expanded}"
            part="dropdown-options"
          >
            ${Object(a.repeat)(this.renderOptions,e=>e.key,(e,t)=>r.html`
                <li
                  class="md-dropdown-option"
                  role="option"
                  aria-label="${e.value}"
                  aria-selected="${t===this.focusedIndex}"
                  part="dropdown-option"
                  ?focused="${t===this.focusedIndex}"
                  @click="${()=>{this.focusToIndex(t),this.select(),this.collapse()}}"
                >
                  <span class="select-label" part="label">
                    <span>${e.value}</span>
                  </span>
                </li>
              `)}
          </ul>
        </div>
      `}};c([Object(d.property)({type:String,attribute:"title"})],t.prototype,"title",void 0),c([Object(d.property)({type:Array})],t.prototype,"options",void 0),c([Object(d.property)({type:String,attribute:"option-id"})],t.prototype,"optionId",void 0),c([Object(d.property)({type:String,attribute:"option-value"})],t.prototype,"optionValue",void 0),c([Object(d.property)({type:Object})],t.prototype,"defaultOption",void 0),c([Object(d.property)({type:Boolean,reflect:!0})],t.prototype,"disabled",void 0),c([Object(d.property)({type:Boolean,attribute:"allow-unselected",reflect:!0})],t.prototype,"allowUnselected",void 0),c([Object(d.property)({type:Number,attribute:"visible-option",reflect:!0})],t.prototype,"visibleOptions",void 0),c([Object(d.internalProperty)()],t.prototype,"renderOptions",void 0),c([Object(d.internalProperty)()],t.prototype,"selectedKey",void 0),c([Object(d.internalProperty)()],t.prototype,"expanded",void 0),c([Object(d.internalProperty)()],t.prototype,"focusedIndex",void 0),c([Object(d.query)("label")],t.prototype,"label",void 0),c([Object(d.query)("ul.md-dropdown-list")],t.prototype,"optionsList",void 0),c([Object(d.queryAll)("li.md-dropdown-option")],t.prototype,"optionsListItems",void 0),t=c([Object(s.f)("md-dropdown")],t),e.ELEMENT=t}(u||(u={}))}}]);