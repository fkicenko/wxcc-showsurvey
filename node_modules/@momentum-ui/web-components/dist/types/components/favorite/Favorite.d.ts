/**
 * Copyright (c) Cisco Systems, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */
import { LitElement } from "lit-element";
import "@/components/icon/Icon";
export declare namespace Favorite {
    const ELEMENT_base: typeof LitElement & import("../../mixins/FocusMixin").AnyConstructor<import("../../mixins/FocusMixin").FocusClass>;
    export class ELEMENT extends ELEMENT_base {
        disabled: boolean;
        checked: boolean;
        value: string;
        id: string;
        label: string;
        private customId;
        connectedCallback(): void;
        static get styles(): import("lit-element").CSSResult[];
        handleFavorite(event: CustomEvent): void;
        handleElectKeyDown(event: KeyboardEvent): void;
        disconnectedCallback(): void;
        get favoriteClassMap(): {
            "md-favorite--active": boolean;
            "md-favorite--disabled": boolean;
        };
        render(): import("lit-element").TemplateResult;
    }
    export {};
}
declare global {
    interface HTMLElementTagNameMap {
        "md-favorite": Favorite.ELEMENT;
    }
}
