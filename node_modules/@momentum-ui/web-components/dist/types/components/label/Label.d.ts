/**
 * Copyright (c) Cisco Systems, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */
import { LitElement } from "lit-element";
export declare namespace Label {
    type LabelEventDetail = {
        htmlFor: string;
    };
    class ELEMENT extends LitElement {
        label: string;
        theme: string;
        radioLabel: boolean;
        checkboxLabel: boolean;
        toggleSwitchLabel: boolean;
        htmlFor: string;
        active: boolean;
        disabled: boolean;
        indeterminate: boolean;
        secondaryLabel: boolean;
        static get styles(): import("lit-element").CSSResult[];
        setFocus(): void;
        get labelClassMap(): {
            [x: string]: boolean;
            "md-radio__label": boolean;
            "md-checkbox__label": boolean;
            "md-secondary-label": boolean;
            active: boolean;
            disabled: boolean;
            indeterminate: boolean;
        };
        handleClick(event: MouseEvent): void;
        render(): import("lit-element").TemplateResult;
    }
}
declare global {
    interface HTMLElementTagNameMap {
        "md-label": Label.ELEMENT;
    }
}
