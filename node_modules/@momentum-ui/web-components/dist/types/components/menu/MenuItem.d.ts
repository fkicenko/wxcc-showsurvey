/**
 * Copyright (c) Cisco Systems, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */
import { LitElement, PropertyValues } from "lit-element";
export declare namespace MenuItem {
    type MenuItemEvent = {
        id: string;
    };
    type MenuItemKeyDownEvent = {
        id: string;
        key: string;
        srcEvent: KeyboardEvent;
    };
    class ELEMENT extends LitElement {
        href: string;
        label: string;
        tabIndex: number;
        private _disabled;
        get disabled(): boolean;
        set disabled(value: boolean);
        private _selected;
        get selected(): boolean;
        set selected(value: boolean);
        static get styles(): import("lit-element").CSSResult[];
        private setupEvents;
        protected firstUpdated(changedProperties: PropertyValues): void;
        protected update(changedProperties: PropertyValues): void;
        handleClick(event: MouseEvent): void;
        handleKeyDown(event: KeyboardEvent): void;
        private notifySelectedItem;
        get menuItemClassMap(): {
            "md-menu-item--selected": boolean;
            disabled: boolean;
        };
        render(): import("lit-element").TemplateResult;
    }
}
declare global {
    interface HTMLElementTagNameMap {
        "md-menu-item": MenuItem.ELEMENT;
    }
}
