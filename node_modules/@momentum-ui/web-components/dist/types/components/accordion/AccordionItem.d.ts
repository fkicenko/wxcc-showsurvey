import { LitElement, PropertyValues } from "lit-element";
export declare namespace AccordionItem {
    export type AccordionEvent = {
        srcEvent: MouseEvent | KeyboardEvent;
    };
    const ELEMENT_base: typeof LitElement & import("../../mixins/FocusMixin").AnyConstructor<import("../../mixins/FocusMixin").FocusClass>;
    export class ELEMENT extends ELEMENT_base {
        private _expanded;
        private _level;
        private uniqueId;
        label: string;
        disabled: boolean;
        get expanded(): boolean;
        set expanded(value: boolean);
        get level(): number;
        set level(value: number);
        header: HTMLButtonElement;
        private notifyExpandedHeader;
        private notifyCollapsedHeader;
        private notifyAccordionFocus;
        protected firstUpdated(changedProperties: PropertyValues): void;
        static get styles(): import("lit-element").CSSResult[];
        handleMouseDown(event: MouseEvent): void;
        handleKeyDown(event: KeyboardEvent): void;
        render(): import("lit-element").TemplateResult;
    }
    export {};
}
declare global {
    interface HTMLElementTagNameMap {
        "md-accordion-item": AccordionItem.ELEMENT;
    }
}
