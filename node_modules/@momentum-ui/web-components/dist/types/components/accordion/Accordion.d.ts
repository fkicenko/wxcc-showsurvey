import { LitElement, PropertyValues } from "lit-element";
import { AccordionItem } from "./AccordionItem";
export declare namespace Accordion {
    const ELEMENT_base: typeof LitElement & import("../../mixins/SlottedMixin").AnyConstructor<import("../../mixins/SlottedMixin").SlotableClass & import("../../mixins/SlottedMixin").SlotableInterface>;
    export class ELEMENT extends ELEMENT_base {
        multiple: boolean;
        accordionItemSlotElement: HTMLSlotElement;
        get slotItem(): HTMLSlotElement;
        filterSlotted(): HTMLElement[];
        private switchFocusedAccordionItem;
        private focusAccordionItem;
        private setActiveAccordionItem;
        private setupExpandedAccordionItems;
        private handleAccordionItemFocus;
        private handleAccordionItemBlur;
        private setupFocusAccordionItems;
        private removeFocusAccordionItems;
        handleKeyDown(event: CustomEvent<AccordionItem.AccordionEvent>): void;
        handleClick(event: CustomEvent<AccordionItem.AccordionEvent>): void;
        protected updated(changedProperties: PropertyValues): void;
        connectedCallback(): void;
        disconnectedCallback(): void;
        static get styles(): import("lit-element").CSSResult[];
        render(): import("lit-element").TemplateResult;
    }
    export {};
}
declare global {
    interface HTMLElementTagNameMap {
        "md-accordion": Accordion.ELEMENT;
    }
}
