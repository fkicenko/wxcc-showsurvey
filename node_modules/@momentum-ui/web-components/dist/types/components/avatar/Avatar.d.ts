/**
 * Copyright (c) Cisco Systems, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */
import "@/components/icon/Icon";
import "@/components/loading/Loading";
import { LitElement } from "lit-element";
export declare const AvatarType: readonly ["active", "bot", "call", "dnd", "group", "inactive", "meeting", "ooo", "presenting", "self", "typing", ""];
export declare const AvatarSize: number[];
export declare namespace Avatar {
    type Type = typeof AvatarType[number];
    type Size = typeof AvatarSize[number];
    class ELEMENT extends LitElement {
        alt: string;
        src: string;
        label: string;
        title: string;
        color: string;
        decrypting: boolean;
        iconName: string;
        type: Type;
        size: Size;
        hasNotification: boolean;
        private imageLoaded;
        private imageErrored;
        static get styles(): import("lit-element").CSSResult[];
        private get avatarClassMap();
        private get avatarLetterClassMap();
        private get avatarStyleMap();
        private get pretifyTitle();
        private get chatIconName();
        private get avatarLetter();
        private get avatarIcon();
        private get avatarImage();
        private loadImage;
        private handleImageLoad;
        private handleImageError;
        render(): import("lit-element").TemplateResult;
    }
}
declare global {
    interface HTMLElementTagNameMap {
        "md-avatar": Avatar.ELEMENT;
    }
}
