/**
 * Copyright (c) Cisco Systems, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */
import { LitElement } from "lit-element";
export declare namespace CheckboxGroup {
    const ELEMENT_base: typeof LitElement & import("../../mixins/RovingTabIndexMixin").AnyConstructor<import("../../mixins/RovingTabIndexMixin").RovingTabIndexInterface & import("../../mixins/SlottedMixin").SlotableInterface & import("../../mixins/SlottedMixin").SlotableClass & import("../../mixins/RovingTabIndexMixin").RovingTabIndexClass>;
    export class ELEMENT extends ELEMENT_base {
        label: string;
        alignment: "horizontal" | "vertical";
        checkboxSlot?: HTMLSlotElement;
        static get styles(): import("lit-element").CSSResult[];
        connectedCallback(): void;
        disconnectedCallback(): void;
        private switchCheckboxOnArrowPress;
        handleKeyDown(event: KeyboardEvent): void;
        get slotElement(): HTMLSlotElement | undefined;
        render(): import("lit-element").TemplateResult;
    }
    export {};
}
declare global {
    interface HTMLElementTagNameMap {
        "md-checkboxgroup": CheckboxGroup.ELEMENT;
    }
}
