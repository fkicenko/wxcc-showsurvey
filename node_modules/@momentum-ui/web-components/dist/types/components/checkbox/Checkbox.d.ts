/**
 * Copyright (c) Cisco Systems, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */
import { LitElement, PropertyValues } from "lit-element";
export declare namespace Checkbox {
    const ELEMENT_base: typeof LitElement & import("../../mixins/FocusMixin").AnyConstructor<import("../../mixins/FocusMixin").FocusClass>;
    export class ELEMENT extends ELEMENT_base {
        autofocus: boolean;
        private _checked;
        get checked(): boolean;
        set checked(value: boolean);
        private _indeterminate;
        get indeterminate(): boolean;
        set indeterminate(value: boolean);
        private _disabled;
        get disabled(): boolean;
        set disabled(value: boolean);
        label: string;
        tabIndex: number;
        input: HTMLInputElement;
        static get styles(): import("lit-element").CSSResult[];
        private toggleCheckbox;
        private isCheckboxActive;
        handleClick(event: MouseEvent): void;
        handleKeyDown(event: KeyboardEvent): void;
        handleChange(event: Event): void;
        protected firstUpdated(changedProperties: PropertyValues): void;
        connectedCallback(): void;
        disconnectedCallback(): void;
        protected update(changedProperties: PropertyValues): void;
        protected updated(changedProperties: PropertyValues): void;
        render(): import("lit-element").TemplateResult;
    }
    export {};
}
declare global {
    interface HTMLElementTagNameMap {
        "md-checkbox": Checkbox.ELEMENT;
    }
}
