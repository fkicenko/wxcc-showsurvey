/**
 * Copyright (c) Cisco Systems, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */
import { LitElement, PropertyValues } from "lit-element";
import "@/components/icon/Icon";
import "@/components/progress-bar/ProgressBar";
import "@/components/tooltip/Tooltip";
export declare namespace Chip {
    type Role = "group" | "option";
    class ELEMENT extends LitElement {
        color: string;
        bgColor: string;
        textColor: string;
        height: string;
        icon: string;
        iconColor: string;
        role: Chip.Role;
        id: string;
        small: boolean;
        readonly: boolean;
        selected: boolean;
        disabled: boolean;
        determinateProgress: number;
        indeterminateProgress: boolean;
        value: string;
        private textOverflow;
        private renderedText;
        connectedCallback(): void;
        updated(changedProperties: PropertyValues): void;
        MAX_LENGTH: number;
        PRE_TRUNC_CHARS: number;
        POST_TRUNC_CHARS: number;
        DOT_COUNT: number;
        truncStringPortion(str: string, firstCharCount?: number, endCharCount?: number, dotCount?: number): void;
        protected selectionChange: (newState: boolean) => void;
        handleClear: (chipId: string) => void;
        handleSelect: () => void;
        handleDeSelect: () => void;
        handleClick(e: MouseEvent): void;
        protected handleKeydown(event: KeyboardEvent): void;
        protected renderBgColor: () => {};
        protected renderTextColor: () => {};
        protected renderHeight: () => {};
        protected getStyles: () => {};
        static get styles(): import("lit-element").CSSResult[];
        protected loadingTemplate(): {};
        protected iconTemplate(): {};
        render(): import("lit-element").TemplateResult;
    }
}
declare global {
    interface HTMLElementTagNameMap {
        "md-chip": Chip.ELEMENT;
    }
}
