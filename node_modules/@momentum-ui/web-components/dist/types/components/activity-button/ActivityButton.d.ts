/**
 * Copyright (c) Cisco Systems, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */
import { CSSResultArray, LitElement } from "lit-element";
import "@/components/button/Button";
import "@/components/icon/Icon";
export declare const activityButtonSize: readonly ["56", "68", "84", 56, 68, 84];
export declare const activityButtonType: readonly ["chat", "camera", "contact-card", "meetings", "whiteboard", "files", "share-screen", "tasks"];
export declare namespace ActivityButton {
    type Size = typeof activityButtonSize[number];
    type Type = typeof activityButtonType[number];
    class ELEMENT extends LitElement {
        ariaLabel: string;
        disabled: boolean;
        label: string;
        size: ActivityButton.Size;
        _type: ActivityButton.Type;
        get type(): "chat" | "camera" | "contact-card" | "meetings" | "whiteboard" | "files" | "share-screen" | "tasks";
        set type(value: "chat" | "camera" | "contact-card" | "meetings" | "whiteboard" | "files" | "share-screen" | "tasks");
        get buttonToIconSizeMapping(): {
            56: string;
            68: string;
            84: string;
        };
        get formatClass(): {
            [x: string]: boolean | "chat" | "camera" | "contact-card" | "meetings" | "whiteboard" | "files" | "share-screen" | "tasks";
            "md-activity": boolean;
        };
        static get styles(): CSSResultArray;
        render(): import("lit-element").TemplateResult;
    }
}
declare global {
    interface HTMLElementTagNameMap {
        "md-activity-button": ActivityButton.ELEMENT;
    }
}
