/**
 * Copyright (c) Cisco Systems, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */
import "@/components/button/Button";
import { DateRangePicker } from "../../date-range-picker/DateRangePicker";
import { DatePickerProps, DayFilters } from "../../../utils/dateUtils";
import { LitElement, PropertyValues } from "lit-element";
import { DateTime } from "luxon";
export declare namespace DatePickerDay {
    class ELEMENT extends LitElement {
        focused: boolean;
        selected: boolean;
        disabled: boolean;
        day: DateTime;
        viewAnchorMonth: number | undefined;
        filterParams: DayFilters | undefined;
        datePickerProps: DatePickerProps | undefined;
        protected isOutsideMonth: boolean;
        protected isToday: boolean;
        protected parentRangePicker: DateRangePicker.ELEMENT | null;
        protected dateIsInRange: boolean;
        button: HTMLButtonElement;
        connectedCallback(): void;
        updated(changedProperties: PropertyValues): void;
        handleClick: (e: MouseEvent) => void;
        isDateInRange: () => boolean;
        isPrimarySelection(): boolean | "" | undefined;
        isLeadingRangeEdge(): boolean;
        isEndingRangeEdge(): boolean;
        isStartDate(): boolean;
        isEndDate(): boolean;
        handleKeyDown: (e: KeyboardEvent) => void;
        static get styles(): import("lit-element").CSSResult[];
        render(): import("lit-element").TemplateResult;
    }
}
declare global {
    interface HTMLElementTagNameMap {
        "md-datepicker-day": DatePickerDay.ELEMENT;
    }
}
