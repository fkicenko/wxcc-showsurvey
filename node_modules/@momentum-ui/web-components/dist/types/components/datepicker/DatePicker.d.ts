/**
 * Copyright (c) Cisco Systems, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */
import "@/components/datepicker/datepicker-calendar/DatePickerCalendar";
import "@/components/input/Input";
import "@/components/menu-overlay/MenuOverlay";
import { MenuOverlay } from "../menu-overlay/MenuOverlay";
import { LitElement, PropertyValues } from "lit-element";
import { DateTime } from "luxon";
export declare namespace DatePicker {
    const weekStartDays: string[];
    class ELEMENT extends LitElement {
        shouldCloseOnSelect: boolean;
        maxDate: string | undefined;
        minDate: string | undefined;
        value: string | undefined;
        weekStart: typeof weekStartDays[number];
        placeholder: string | undefined;
        locale: string;
        includesTime: boolean;
        disabled: boolean;
        customTrigger: boolean;
        selectedDate: DateTime;
        focusedDate: DateTime;
        filterDate: Function | undefined;
        maxDateData: DateTime | undefined;
        minDateData: DateTime | undefined;
        menuOverlay: MenuOverlay.ELEMENT;
        connectedCallback(): void;
        firstUpdated(changedProperties: PropertyValues): Promise<void>;
        updated(changedProperties: PropertyValues): void;
        handleDateInputChange: (event: CustomEvent) => void;
        setOpen: (open: boolean) => void;
        handleSelect: (e: CustomEvent) => void;
        setSelected: (date: DateTime, event: Event) => void;
        setPreSelection: (date: DateTime) => void;
        handleKeyDown: (e: CustomEvent) => void;
        chosenDateLabel: () => string | undefined;
        isValueValid: () => boolean | "" | undefined;
        render(): import("lit-element").TemplateResult;
    }
}
declare global {
    interface HTMLElementTagNameMap {
        "md-datepicker": DatePicker.ELEMENT;
    }
}
