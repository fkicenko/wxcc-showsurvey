import { LitElement, PropertyValues } from "lit-element";
export declare namespace Slider {
    const ELEMENT_base: typeof LitElement & import("../../mixins/FocusMixin").AnyConstructor<import("../../mixins/FocusMixin").FocusClass>;
    export class ELEMENT extends ELEMENT_base {
        private _disabled;
        private _now;
        min: number;
        max: number;
        hideValue: boolean;
        get now(): number;
        set now(value: number);
        text: number;
        label: string;
        step: number;
        get disabled(): boolean;
        set disabled(value: boolean);
        private dragging;
        private currentMouseEvent?;
        private get pointerPosition();
        private calculateHandlePosition;
        private moveSliderTo;
        private trackMouseEvent;
        private ticksTemplate;
        private displayValueTemplate;
        private notifyChanges;
        handleMouseDown(event: MouseEvent): void;
        handleKeyDown(event: KeyboardEvent): void;
        get sliderPointerStyleMap(): {
            left: string;
        };
        get sliderSelectionStyleMap(): {
            right: string;
        };
        static get styles(): import("lit-element").CSSResult[];
        protected firstUpdated(changedProperties: PropertyValues): void;
        connectedCallback(): void;
        disconnectedCallback(): void;
        render(): import("lit-element").TemplateResult;
    }
    export {};
}
declare global {
    interface HTMLElementTagNameMap {
        "md-slider": Slider.ELEMENT;
    }
}
