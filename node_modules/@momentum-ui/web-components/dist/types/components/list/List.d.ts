/**
 * Copyright (c) Cisco Systems, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */
import { LitElement, PropertyValues } from "lit-element";
export declare namespace List {
    const ELEMENT_base: typeof LitElement & import("../../mixins/RovingTabIndexMixin").AnyConstructor<import("../../mixins/RovingTabIndexMixin").RovingTabIndexInterface & import("../../mixins/SlottedMixin").SlotableInterface & import("../../mixins/SlottedMixin").SlotableClass & import("../../mixins/RovingTabIndexMixin").RovingTabIndexClass>;
    export class ELEMENT extends ELEMENT_base {
        alignment: "horizontal" | "vertical";
        label: string;
        role: "list" | "listbox";
        activated: number;
        listItemSlot?: HTMLSlotElement;
        protected firstUpdated(changedProperties: PropertyValues): void;
        private notifySelectedChange;
        connectedCallback(): void;
        disconnectedCallback(): void;
        private findListItemIndex;
        private switchListItemOnArrowPress;
        private setActivated;
        private findSelectedListItemIndex;
        private setSelected;
        protected updated(changedProperties: PropertyValues): void;
        private isListItemDisabled;
        handleClick(event: MouseEvent): void;
        handleKeyDown(event: KeyboardEvent): void;
        get slotElement(): HTMLSlotElement | undefined;
        static get styles(): import("lit-element").CSSResult[];
        render(): import("lit-element").TemplateResult;
    }
    export {};
}
declare global {
    interface HTMLElementTagNameMap {
        "md-list": List.ELEMENT;
    }
}
