import "@/components/combobox/ComboBox";
import "@/components/input/Input";
import { LitElement } from "lit-element";
export declare namespace PhoneInput {
    interface Country {
        name: string;
        value: string;
        code: string;
    }
    type Attributes = {
        codePlaceholder: string;
        numberPlaceholder: string;
        countryCallingCode: string;
        pill: boolean;
        value: string;
        errorMessage: string;
        flagClass: string;
        showErrorMessage: string;
    };
    type CountryCalling = {
        id: string;
        value: string;
    };
    class ELEMENT extends LitElement {
        codePlaceholder: string;
        numberPlaceholder: string;
        countryCallingCode: string;
        showFlags: boolean;
        pill: boolean;
        disabled: boolean;
        value: string;
        errorMessage: string;
        showErrorMessage: boolean;
        private countryCode;
        private codeList;
        private formattedValue;
        private isValid;
        combobox: HTMLElement;
        connectedCallback(): void;
        getCountryFlag(code: string): import("lit-element").TemplateResult;
        countryCodeOptionTemplate(country: PhoneInput.Country, index: number): import("lit-element").TemplateResult;
        validateNumber(): void;
        handleCountryChange(event: CustomEvent): void;
        handlePhoneChange(event: CustomEvent): void;
        handleKeydown(event: Event): void;
        handleBlur(event: Event): void;
        validateInput(input: string): void;
        getFormatedCountryCallingCode(): {
            id: string;
            value: string;
        };
        getModStyle(): import("lit-element").TemplateResult;
        static get styles(): import("lit-element").CSSResult[];
        render(): import("lit-element").TemplateResult;
    }
}
declare global {
    interface HTMLElementTagNameMap {
        "md-phone-input": PhoneInput.ELEMENT;
    }
}
