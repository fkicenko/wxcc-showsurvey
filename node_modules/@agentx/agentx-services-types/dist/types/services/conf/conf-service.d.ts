import { Service } from "../..";
import { AqmService } from "../aqm/aqm-service";
export declare class ConfService {
    private readonly aqm;
    profile: Service.Conf.Profile | null;
    constructor(aqm: AqmService);
    fetchProfile(): Promise<Service.Conf.Profile>;
    updateProfileTeams(teams: Service.Conf.Team[]): void;
}
declare module "../../index" {
    namespace Service.Conf {
        type Profile = {
            teams: Team[];
            defaultDn: string;
            forceDefaultDn: Record<string, any> | boolean;
            regexUS: RegExp;
            regexOther: RegExp;
            agentId: string;
            agentName: string;
            agentMailId: string;
            agentSubStatus: string;
            agentProfileID: string;
            dialPlan: Service.Aqm.Configs.DialPlan;
            skillProfileId: string;
            siteId: string;
            enterpriseId: string;
            privacyShieldVisible: string;
            idleCodes: Service.Aqm.Configs.Entity[];
            defaultIdleName: string;
            wrapupCodes: Service.Aqm.Configs.Entity[];
            defaultWrapupCode: number;
            wrapUpData: Service.Aqm.Configs.WrapupData;
            orgId: string;
            isOutboundEnabledForTenant: boolean;
            isOutboundEnabledForAgent: boolean;
            isAdhocDialingEnabled: boolean;
            isAgentAvailableAfterOutdial: boolean;
            isCampaignManagementEnabled: boolean;
            outDialEp: string;
            isEndCallEnabled: boolean;
            cadVariables: Service.Aqm.Configs.CadVariables[];
            callVariablesSuppressed: Service.Aqm.Configs.CallVariablesSuppressed;
            lcmUrl: string;
            agentDbId: string;
            allowConsultToQueue: boolean;
            campaignManagerAdditionalInfo: string;
        };
        type Team = {
            teamId: string;
            teamName: string;
        };
    }
}
