import { Service } from "../../index";
import FeatureFlag = Service.FeatureFlag;
export declare class FeatureFlagService {
    splitio: SplitIO.ISDK;
    splitClient: SplitIO.IClient;
    splitManger: SplitIO.IManager;
    orgId: string;
    isFeatureFlagsLoaded: boolean;
    initSplitioSdk(orgId: string, tenantId: string): Promise<void>;
    fetchFeatureFlags(orgId: string, tenantId: string): Promise<FeatureFlag.FeatureFlagArray>;
    private getEnabledFeatures;
    isFeatureEnabled(featureId: string): boolean;
}
declare module "../../index" {
    namespace Service.FeatureFlag {
        type FeatureFlagArray = {
            features: FeatureFlagLabel[];
        };
        type FeatureFlagLabel = "care_attachment" | "care_digital_v2" | "wcc_digital_v3" | "care_video_escalate" | "cloud_cherry_stats" | "wcc_pci_compliance" | "desktop-outdial-ani" | "KAD_admin_portal" | "desktop-rona-indicator" | "desktop-change-team";
    }
}
declare module "@uuip/unified-ui-platform-sdk" {
    namespace Err {
        interface Ids {
            "Service.featureflag": "Service.featureflag.fetchFeatureFlags";
        }
    }
}
