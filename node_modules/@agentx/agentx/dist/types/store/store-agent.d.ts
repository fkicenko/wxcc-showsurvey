import { AgentStateSelector, WrapUp } from "@agentx/agentx-mfe-react-based";
import { StationLogin } from "@agentx/agentx-mfe-wc-based";
import { Service } from "@agentx/agentx-services";
/**
 * (manro):
 *
 * Major part of this STORE module
 * SHOULD BE DONE in AgentStateSelector & AgentProfile
 */
export declare class ModuleAgent {
    dnNumber: string;
    teamName: string;
    profileType: string;
    enterpriseId: string;
    privacyShieldVisible: string;
    agentName: string;
    agentId: string;
    agentEmailId: string;
    agentProfileID: string;
    isOutboundEnabledForTenant: boolean;
    isOutboundEnabledForAgent: boolean;
    isAdhocDialingEnabled: boolean;
    isAgentAvailableAfterOutdial: boolean;
    isCampaignManagementEnabled: boolean;
    campaignManagerAdditionalInfo: string;
    siteId: string;
    usesOtherDN: boolean;
    isEndCallEnabled: boolean;
    allowConsultToQueue: boolean;
    agentDbId: string;
    lcmUrl: string;
    teamId: string;
    dialPlan: Service.Aqm.Configs.DialPlan;
    outDialEp: string;
    agentPhoto: string;
    channels: {
        voiceCount: number;
        chatCount: number;
        emailCount: number;
        socialCount: number;
    };
    subStatus: Service.Aqm.Agent.StateChange["state"];
    subStatusChangeTimestamp: Date;
    idleStatusTimestamp: Date;
    idleCodes: Service.Aqm.Configs.Entity[];
    wrapUpData: Service.Aqm.Configs.WrapupData;
    outdialAniList: Service.Aqm.Agent.OutdialAni[];
    cadVariables: Service.Aqm.Configs.CadVariables[];
    callVariablesSuppressed: Service.Aqm.Configs.CallVariablesSuppressed;
    get getOutdialRegex(): string;
    private changeAgentState;
    updateStatusAfterRONA(newState: string): void;
    /**
     * Actions
     */
    updateSubStatus(subStatus: Service.Aqm.Agent.StateChange["state"], lastStateChangeTimestamp: number, lastIdleCodeChangeTimestamp: number): void;
    updateAgentTeam(teamName: string): void;
    updateAgentProfileLogin(detail: StationLogin.ESuccess["detail"], profile: Service.Conf.Profile): void;
    updateStatusAfterOutdial(e: WrapUp.EWrapupEvent): void;
    updateStateToRona(): void;
    updateoutdialAniList(resp: Service.Aqm.Agent.OutdialAniListSuccess): void;
    selectState(e: AgentStateSelector.EventSelected): Promise<void>;
}
declare module "@/store" {
    namespace Store.Agent { }
}
export declare const agent: ModuleAgent;
